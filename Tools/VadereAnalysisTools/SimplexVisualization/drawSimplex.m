clear all; close all;
data = import('log.txt');
figure()

t = data(:,[2,4,6]);
t2 = data(:,[3,5,7]);

xlim(  [min(t(:)), max(t(:))] );
ylim( [min(t2(:)), max(t2(:))] );

colors = colormap(lines);

for k = 1:length(data)
    
    
    kk = data(k,1);
    x1 = data(k,2);
    y1 = data(k,3);
    x2 = data(k,4);
    y2 = data(k,5);
    x3 = data(k,6);
    y3 = data(k,7);
    
    subplot(5,5,kk);
    
    line([x1,x2], [y1, y2], 'Color', colors(kk,:));
    hold on;
    line([x2,x3], [y2, y3], 'Color', colors(kk,:));
    line([x3,x1], [y3, y1], 'Color', colors(kk,:));
    
    pause(0.2);
    drawnow;
    
end

figure()


for k = 1:length(data)
    
    
    kk = data(k,1);
    x1 = data(k,2);
    y1 = data(k,3);
    x2 = data(k,4);
    y2 = data(k,5);
    x3 = data(k,6);
    y3 = data(k,7);
    
   
    
    line([x1,x2], [y1, y2], 'Color', colors(kk,:));
    hold on;
    line([x2,x3], [y2, y3], 'Color', colors(kk,:));
    line([x3,x1], [y3, y1], 'Color', colors(kk,:));
    
    pause(0.2);
    drawnow;
    
end


function log1 = import(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as a matrix.
%   LOG1 = IMPORTFILE(FILENAME) Reads data from text file FILENAME for the
%   default selection.
%
%   LOG1 = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from rows
%   STARTROW through ENDROW of text file FILENAME.
%
% Example:
%   log1 = importfile('log.txt', 3, 120);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2019/03/19 16:01:10

%% Initialize variables.
delimiter = {',',';'};
if nargin<=2
    startRow = 3;
    endRow = inf;
end

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'TextType', 'string', 'HeaderLines', startRow(1)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'TextType', 'string', 'HeaderLines', startRow(block)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Create output variable
log1 = [dataArray{1:end-1}];
end