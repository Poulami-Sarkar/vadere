<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.vadere</groupId>
    <artifactId>vadere</artifactId>
    <version>0.1-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>
  <artifactId>state</artifactId>
  <name>VadereState</name>
  <description>Holds the "model" part of the MVC pattern used in Vadere.</description>
  <build>
    <sourceDirectory>src</sourceDirectory>
    <testSourceDirectory>tests</testSourceDirectory>
    <plugins>
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>${maven-compiler.version}</version>
            <configuration>
                <source>${maven-compiler.source.version}</source>
                <target>${maven-compiler.target.version}</target>
                <annotationProcessorPaths>
                    <path>
                        <groupId>org.vadere</groupId>
                        <artifactId>annotation</artifactId>
                        <version>0.1-SNAPSHOT</version>
                    </path>
                </annotationProcessorPaths>
            </configuration>
        </plugin>
		<plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.7.9</version>
            <executions>
                <!-- Use JaCoCo's Java agents to record coverage data by using on-the-fly class file instrumentation. -->
                <execution>
                    <id>pre-unit-test</id>
                    <goals>
                        <goal>prepare-agent</goal>
                    </goals>
                    <configuration>
                        <output>file</output>
                        <destFile>${project.build.directory}/coverage-data/jacoco-unit-tests.coverage</destFile>
                        <propertyName>surefireArgLine</propertyName>
                    </configuration>
                </execution>
                <!-- Use JaCoCo agent output to create coverage reports in CSV, HTML and XML format. -->
                <execution>
                    <id>post-unit-test</id>
                    <phase>test</phase>
                    <goals>
                        <goal>report</goal>
                    </goals>
                    <configuration>
                        <dataFile>${project.build.directory}/coverage-data/jacoco-unit-tests.coverage</dataFile>
                        <outputDirectory>${project.reporting.outputDirectory}/coverage-reports</outputDirectory>
                    </configuration>
                </execution>
            </executions>    
        </plugin>
        <plugin>
            <!-- Maven Surefire is used to execute unit tests. -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>2.19</version>
            <configuration>
                <argLine>${surefireArgLine}</argLine>
                <enableAssertions>true</enableAssertions>
                <excludes>
                    <exclude></exclude>
                </excludes>
                <failIfNoTests>false</failIfNoTests>
                <skipTests>${skip.unit.tests}</skipTests>
            </configuration>
        </plugin>
    </plugins>
  </build>
  <dependencies>
<!-- module dependencies -->
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>utils</artifactId>
      <version>${project.version}</version>
    </dependency>
	<dependency>
		<groupId>commons-attributes</groupId>
		<artifactId>commons-attributes-api</artifactId>
		<version>2.2</version>
	</dependency>
      <dependency>
          <groupId>${project.groupId}</groupId>
          <artifactId>annotation</artifactId>
          <version>${project.version}</version>
      </dependency>

  </dependencies>
</project>
